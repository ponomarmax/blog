@using PagedList.Mvc

@model PagedList.IPagedList<Blog.Models.PostModel>

@{
    ViewBag.RangeColor = new string[] { "danger", "primary", "warning", "default" };
    ViewBag.rand = new Random();
}
@foreach (var item in Model)
{
    <h2>@Html.ActionLink(item.Title, "Details", new { id = item.ID })</h2>
    <h5><span class="glyphicon glyphicon-time"></span> Post by @item.Blog.Bloger.UserName, on @item.DateTime.Month @item.DateTime.Day, @item.DateTime.Year.</h5>
    <h5>
        @foreach (var tag in item.Tags)
        {
            <span class="label label-@ViewBag.RangeColor[ViewBag.rand.Next(3)]">@Html.ActionLink(@tag.Tag,"Index",new { tagId = tag.ID })</span>
        }
    </h5>
    <br>
    <p>@Html.DisplayFor(modelItem => item.ShortBody)</p>
    <p>@Html.ActionLink("Read More ->", "Details", new { id = item.ID }, new { @class = "btn btn-primary glyphicon-arrow-right" })</p>
    <br><br>
}
<hr />

<div class="row">
    @if (Model.Count() != 0)
    {
        <div class="pager">
            @if (ViewBag.tag == "tag")
            {
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, tagId = ViewBag.tagId }), PagedListRenderOptions.PageNumbersOnly)
            }
            else
            {
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, blogId = Model[0].Blog.ID }), PagedListRenderOptions.PageNumbersOnly)
            }
        </div>
    }
</div>
